# Generated by Django 4.2.7 on 2025-08-16 19:37

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('patients', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Receta',
            fields=[
                ('folio_receta', models.AutoField(primary_key=True, serialize=False, verbose_name='Folio de Receta')),
                ('tipo_receta', models.CharField(choices=[('FARMACIA', 'Farmacia'), ('CMI', 'Centro de Mezclas (CMI)')], max_length=10, verbose_name='Tipo de Receta')),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('VALIDADA', 'Validada'), ('SURTIDA', 'Surtida'), ('CANCELADA', 'Cancelada')], default='PENDIENTE', max_length=15, verbose_name='Estado')),
                ('prioridad', models.CharField(choices=[('BAJA', 'Baja'), ('MEDIA', 'Media'), ('ALTA', 'Alta'), ('URGENTE', 'Urgente')], default='MEDIA', max_length=10, verbose_name='Prioridad')),
                ('servicio_solicitante', models.CharField(help_text='Ej: Oncología, Medicina Interna, Urgencias, etc.', max_length=100, verbose_name='Servicio Solicitante')),
                ('diagnostico', models.TextField(help_text='Diagnóstico asociado a la receta', verbose_name='Diagnóstico')),
                ('indicaciones_generales', models.TextField(blank=True, help_text='Instrucciones especiales para el paciente', null=True, verbose_name='Indicaciones Generales')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_validacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Validación')),
                ('fecha_dispensacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Dispensación')),
                ('fecha_vencimiento', models.DateField(blank=True, help_text='Fecha límite para surtir la receta', null=True, verbose_name='Fecha de Vencimiento')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('dispensado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recetas_dispensadas', to=settings.AUTH_USER_MODEL, verbose_name='Dispensado por')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recetas', to='patients.paciente', verbose_name='Paciente')),
                ('prescrito_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recetas_prescritas', to=settings.AUTH_USER_MODEL, verbose_name='Prescrito por')),
                ('validado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recetas_validadas', to=settings.AUTH_USER_MODEL, verbose_name='Validado por')),
            ],
            options={
                'verbose_name': 'Receta',
                'verbose_name_plural': 'Recetas',
                'db_table': 'recetas',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='DetalleReceta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clave_medicamento', models.CharField(help_text='Código interno del medicamento', max_length=50, verbose_name='Clave del Medicamento')),
                ('descripcion_medicamento', models.TextField(verbose_name='Descripción del Medicamento')),
                ('concentracion', models.CharField(blank=True, help_text='Ej: 500mg, 250mg/5ml', max_length=100, null=True, verbose_name='Concentración')),
                ('forma_farmaceutica', models.CharField(blank=True, help_text='Ej: Tableta, Jarabe, Inyección', max_length=50, null=True, verbose_name='Forma Farmacéutica')),
                ('dosis', models.CharField(help_text='Ej: 1 tableta cada 8 horas', max_length=200, verbose_name='Dosis')),
                ('via_administracion', models.CharField(blank=True, help_text='Ej: Oral, Intravenosa, Intramuscular', max_length=50, null=True, verbose_name='Vía de Administración')),
                ('frecuencia', models.CharField(blank=True, help_text='Ej: Cada 8 horas, 3 veces al día', max_length=100, null=True, verbose_name='Frecuencia')),
                ('duracion_tratamiento', models.CharField(blank=True, help_text='Ej: 7 días, 2 semanas', max_length=100, null=True, verbose_name='Duración del Tratamiento')),
                ('cantidad_prescrita', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Cantidad Prescrita')),
                ('unidad_medida', models.CharField(choices=[('MG', 'Miligramos'), ('G', 'Gramos'), ('ML', 'Mililitros'), ('L', 'Litros'), ('TABLETAS', 'Tabletas'), ('CAPSULAS', 'Cápsulas'), ('AMPOLLETAS', 'Ampolletas'), ('VIALES', 'Viales'), ('SOBRES', 'Sobres'), ('GOTAS', 'Gotas'), ('UNIDADES', 'Unidades')], default='UNIDADES', max_length=20, verbose_name='Unidad de Medida')),
                ('cantidad_surtida', models.PositiveIntegerField(default=0, verbose_name='Cantidad Surtida')),
                ('lote', models.CharField(blank=True, max_length=50, null=True, verbose_name='Lote')),
                ('fecha_caducidad', models.DateField(blank=True, null=True, verbose_name='Fecha de Caducidad')),
                ('laboratorio', models.CharField(blank=True, max_length=100, null=True, verbose_name='Laboratorio Fabricante')),
                ('precio_unitario', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Precio Unitario')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('permite_sustitucion', models.BooleanField(default=True, verbose_name='Permite Sustitución')),
                ('medicamento_sustituido', models.CharField(blank=True, help_text='En caso de sustitución, medicamento original', max_length=200, null=True, verbose_name='Medicamento Sustituido')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('receta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='prescriptions.receta', verbose_name='Receta')),
            ],
            options={
                'verbose_name': 'Detalle de Receta',
                'verbose_name_plural': 'Detalles de Receta',
                'db_table': 'detalle_recetas',
                'ordering': ['created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='receta',
            index=models.Index(fields=['estado'], name='recetas_estado_92ca33_idx'),
        ),
        migrations.AddIndex(
            model_name='receta',
            index=models.Index(fields=['tipo_receta'], name='recetas_tipo_re_1c7523_idx'),
        ),
        migrations.AddIndex(
            model_name='receta',
            index=models.Index(fields=['fecha_creacion'], name='recetas_fecha_c_8a33b6_idx'),
        ),
        migrations.AddIndex(
            model_name='receta',
            index=models.Index(fields=['servicio_solicitante'], name='recetas_servici_3d6861_idx'),
        ),
        migrations.AddIndex(
            model_name='receta',
            index=models.Index(fields=['prioridad'], name='recetas_priorid_9f646e_idx'),
        ),
        migrations.AddIndex(
            model_name='detallereceta',
            index=models.Index(fields=['clave_medicamento'], name='detalle_rec_clave_m_49dd1d_idx'),
        ),
        migrations.AddIndex(
            model_name='detallereceta',
            index=models.Index(fields=['lote'], name='detalle_rec_lote_e9b163_idx'),
        ),
        migrations.AddIndex(
            model_name='detallereceta',
            index=models.Index(fields=['fecha_caducidad'], name='detalle_rec_fecha_c_e971c7_idx'),
        ),
    ]
