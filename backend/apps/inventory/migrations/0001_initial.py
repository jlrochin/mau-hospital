# Generated by Django 4.2.7 on 2025-08-17 01:32

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        (
            "prescriptions",
            "0005_catalogomedicamentos_alter_detallereceta_options_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=200, verbose_name="Nombre del Proveedor"
                    ),
                ),
                (
                    "contact_person",
                    models.CharField(
                        max_length=150, verbose_name="Persona de Contacto"
                    ),
                ),
                ("phone", models.CharField(max_length=20, verbose_name="Teléfono")),
                ("email", models.EmailField(max_length=254, verbose_name="Email")),
                ("address", models.TextField(verbose_name="Dirección")),
                (
                    "tax_id",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="RFC/ID Fiscal"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de Actualización"
                    ),
                ),
            ],
            options={
                "verbose_name": "Proveedor",
                "verbose_name_plural": "Proveedores",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="MedicationCatalog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(max_length=50, unique=True, verbose_name="Código"),
                ),
                ("name", models.CharField(max_length=300, verbose_name="Nombre")),
                (
                    "active_ingredient",
                    models.CharField(max_length=200, verbose_name="Principio Activo"),
                ),
                (
                    "concentration",
                    models.CharField(max_length=100, verbose_name="Concentración"),
                ),
                (
                    "pharmaceutical_form",
                    models.CharField(
                        choices=[
                            ("TABLET", "Tableta"),
                            ("CAPSULE", "Cápsula"),
                            ("SYRUP", "Jarabe"),
                            ("INJECTION", "Inyección"),
                            ("CREAM", "Crema"),
                            ("DROPS", "Gotas"),
                            ("INHALER", "Inhalador"),
                            ("PATCH", "Parche"),
                            ("SUPPOSITORY", "Supositorio"),
                        ],
                        max_length=20,
                        verbose_name="Forma Farmacéutica",
                    ),
                ),
                (
                    "medication_type",
                    models.CharField(
                        choices=[
                            ("GENERIC", "Genérico"),
                            ("BRAND", "Marca"),
                            ("BIOSIMILAR", "Biosimilar"),
                            ("MAGISTRAL", "Magistral"),
                        ],
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "atc_code",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="Código ATC"
                    ),
                ),
                (
                    "therapeutic_group",
                    models.CharField(max_length=100, verbose_name="Grupo Terapéutico"),
                ),
                (
                    "requires_prescription",
                    models.BooleanField(default=True, verbose_name="Requiere Receta"),
                ),
                (
                    "controlled_substance",
                    models.BooleanField(
                        default=False, verbose_name="Sustancia Controlada"
                    ),
                ),
                (
                    "unit_of_measure",
                    models.CharField(max_length=50, verbose_name="Unidad de Medida"),
                ),
                (
                    "minimum_stock",
                    models.PositiveIntegerField(
                        default=10, verbose_name="Stock Mínimo"
                    ),
                ),
                (
                    "maximum_stock",
                    models.PositiveIntegerField(
                        default=1000, verbose_name="Stock Máximo"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de Actualización"
                    ),
                ),
            ],
            options={
                "verbose_name": "Medicamento",
                "verbose_name_plural": "Catálogo de Medicamentos",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["code"], name="inventory_m_code_2b4616_idx"),
                    models.Index(
                        fields=["active_ingredient"],
                        name="inventory_m_active__381b6e_idx",
                    ),
                    models.Index(
                        fields=["therapeutic_group"],
                        name="inventory_m_therape_b561bc_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="InventoryStock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "current_stock",
                    models.PositiveIntegerField(default=0, verbose_name="Stock Actual"),
                ),
                (
                    "reserved_stock",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Stock Reservado"
                    ),
                ),
                (
                    "average_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Costo Promedio",
                    ),
                ),
                (
                    "last_purchase_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Último Precio de Compra",
                    ),
                ),
                (
                    "storage_location",
                    models.CharField(
                        max_length=100, verbose_name="Ubicación de Almacenamiento"
                    ),
                ),
                (
                    "storage_conditions",
                    models.CharField(
                        choices=[
                            ("ROOM_TEMP", "Temperatura Ambiente"),
                            ("REFRIGERATED", "Refrigerado (2-8°C)"),
                            ("FROZEN", "Congelado (-18°C)"),
                            ("CONTROLLED_TEMP", "Temperatura Controlada"),
                        ],
                        default="ROOM_TEMP",
                        max_length=20,
                        verbose_name="Condiciones de Almacenamiento",
                    ),
                ),
                (
                    "last_movement_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Última Fecha de Movimiento",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de Actualización"
                    ),
                ),
                (
                    "medication",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock",
                        to="inventory.medicationcatalog",
                        verbose_name="Medicamento",
                    ),
                ),
            ],
            options={
                "verbose_name": "Stock de Inventario",
                "verbose_name_plural": "Stock de Inventario",
            },
        ),
        migrations.CreateModel(
            name="InventoryBatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "batch_number",
                    models.CharField(max_length=100, verbose_name="Número de Lote"),
                ),
                (
                    "manufacturing_date",
                    models.DateField(verbose_name="Fecha de Fabricación"),
                ),
                ("expiry_date", models.DateField(verbose_name="Fecha de Vencimiento")),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Cantidad",
                    ),
                ),
                (
                    "unit_cost",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Costo Unitario"
                    ),
                ),
                ("purchase_date", models.DateField(verbose_name="Fecha de Compra")),
                (
                    "is_quarantined",
                    models.BooleanField(default=False, verbose_name="En Cuarentena"),
                ),
                (
                    "quarantine_reason",
                    models.TextField(
                        blank=True, null=True, verbose_name="Motivo de Cuarentena"
                    ),
                ),
                (
                    "quality_checked",
                    models.BooleanField(
                        default=False, verbose_name="Control de Calidad"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notas"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "received_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Recibido por",
                    ),
                ),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="batches",
                        to="inventory.inventorystock",
                        verbose_name="Stock",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="inventory.supplier",
                        verbose_name="Proveedor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Lote de Inventario",
                "verbose_name_plural": "Lotes de Inventario",
                "ordering": ["expiry_date"],
            },
        ),
        migrations.CreateModel(
            name="InventoryAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("LOW_STOCK", "Stock Bajo"),
                            ("OUT_OF_STOCK", "Sin Stock"),
                            ("NEAR_EXPIRY", "Próximo a Vencer"),
                            ("EXPIRED", "Vencido"),
                            ("QUALITY_ISSUE", "Problema de Calidad"),
                            ("SYSTEM_ERROR", "Error del Sistema"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Alerta",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Baja"),
                            ("MEDIUM", "Media"),
                            ("HIGH", "Alta"),
                            ("CRITICAL", "Crítica"),
                        ],
                        max_length=10,
                        verbose_name="Prioridad",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Título")),
                ("message", models.TextField(verbose_name="Mensaje")),
                (
                    "is_acknowledged",
                    models.BooleanField(default=False, verbose_name="Reconocida"),
                ),
                (
                    "acknowledged_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de Reconocimiento"
                    ),
                ),
                (
                    "is_resolved",
                    models.BooleanField(default=False, verbose_name="Resuelta"),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de Resolución"
                    ),
                ),
                (
                    "resolution_notes",
                    models.TextField(
                        blank=True, null=True, verbose_name="Notas de Resolución"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "acknowledged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acknowledged_alerts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Reconocida por",
                    ),
                ),
                (
                    "batch",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.inventorybatch",
                        verbose_name="Lote",
                    ),
                ),
                (
                    "medication",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.medicationcatalog",
                        verbose_name="Medicamento",
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_alerts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Resuelta por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Alerta de Inventario",
                "verbose_name_plural": "Alertas de Inventario",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MedicamentoStock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "current_stock",
                    models.PositiveIntegerField(default=0, verbose_name="Stock Actual"),
                ),
                (
                    "reserved_stock",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Stock Reservado"
                    ),
                ),
                (
                    "average_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Costo Promedio",
                    ),
                ),
                (
                    "last_purchase_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Último Precio de Compra",
                    ),
                ),
                (
                    "storage_location",
                    models.CharField(
                        default="Farmacia General",
                        max_length=100,
                        verbose_name="Ubicación de Almacenamiento",
                    ),
                ),
                (
                    "storage_conditions",
                    models.CharField(
                        choices=[
                            ("ROOM_TEMP", "Temperatura Ambiente"),
                            ("REFRIGERATED", "Refrigerado (2-8°C)"),
                            ("FROZEN", "Congelado (-18°C)"),
                            ("CONTROLLED_TEMP", "Temperatura Controlada"),
                        ],
                        default="ROOM_TEMP",
                        max_length=20,
                        verbose_name="Condiciones de Almacenamiento",
                    ),
                ),
                (
                    "last_movement_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Última Fecha de Movimiento",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Fecha de Actualización"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Creación"
                    ),
                ),
                (
                    "medicamento_catalogo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_records",
                        to="prescriptions.catalogomedicamentos",
                        verbose_name="Medicamento",
                    ),
                ),
            ],
            options={
                "verbose_name": "Stock de Medicamento",
                "verbose_name_plural": "Stock de Medicamentos",
                "indexes": [
                    models.Index(
                        fields=["medicamento_catalogo"],
                        name="inventory_m_medicam_93df9f_idx",
                    ),
                    models.Index(
                        fields=["current_stock"], name="inventory_m_current_d75b4e_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="InventoryMovement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "movement_type",
                    models.CharField(
                        choices=[
                            ("ENTRY", "Entrada"),
                            ("EXIT", "Salida"),
                            ("ADJUSTMENT", "Ajuste"),
                            ("TRANSFER", "Transferencia"),
                            ("WASTE", "Desperdicio"),
                            ("EXPIRY", "Vencimiento"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Movimiento",
                    ),
                ),
                (
                    "reason",
                    models.CharField(
                        choices=[
                            ("PURCHASE", "Compra"),
                            ("DISPENSING", "Dispensación"),
                            ("RETURN", "Devolución"),
                            ("DAMAGED", "Dañado"),
                            ("EXPIRED", "Vencido"),
                            ("INVENTORY_COUNT", "Conteo de Inventario"),
                            ("TRANSFER_IN", "Transferencia Entrada"),
                            ("TRANSFER_OUT", "Transferencia Salida"),
                        ],
                        max_length=20,
                        verbose_name="Motivo",
                    ),
                ),
                ("quantity", models.IntegerField(verbose_name="Cantidad")),
                (
                    "unit_cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Costo Unitario",
                    ),
                ),
                (
                    "reference_document",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Documento de Referencia",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notas"),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha y Hora"
                    ),
                ),
                (
                    "batch",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventory.inventorybatch",
                        verbose_name="Lote",
                    ),
                ),
                (
                    "processed_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Procesado por",
                    ),
                ),
                (
                    "related_prescription",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="prescriptions.receta",
                        verbose_name="Receta Relacionada",
                    ),
                ),
                (
                    "related_prescription_detail",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="prescriptions.detallereceta",
                        verbose_name="Detalle de Receta Relacionado",
                    ),
                ),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movements",
                        to="inventory.inventorystock",
                        verbose_name="Stock",
                    ),
                ),
            ],
            options={
                "verbose_name": "Movimiento de Inventario",
                "verbose_name_plural": "Movimientos de Inventario",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["movement_type", "timestamp"],
                        name="inventory_i_movemen_0b061d_idx",
                    ),
                    models.Index(
                        fields=["reason", "timestamp"],
                        name="inventory_i_reason_5ac59d_idx",
                    ),
                    models.Index(
                        fields=["processed_by", "timestamp"],
                        name="inventory_i_process_8ba6c8_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="inventorybatch",
            index=models.Index(
                fields=["batch_number"], name="inventory_i_batch_n_9bceae_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventorybatch",
            index=models.Index(
                fields=["expiry_date"], name="inventory_i_expiry__e4a18c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventorybatch",
            index=models.Index(
                fields=["supplier"], name="inventory_i_supplie_6e9e55_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="inventorybatch",
            unique_together={("stock", "batch_number")},
        ),
        migrations.AddIndex(
            model_name="inventoryalert",
            index=models.Index(
                fields=["alert_type", "is_resolved"],
                name="inventory_i_alert_t_70f29a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryalert",
            index=models.Index(
                fields=["priority", "is_acknowledged"],
                name="inventory_i_priorit_a289f3_idx",
            ),
        ),
    ]
